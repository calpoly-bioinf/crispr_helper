# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = RNAfold$(EXEEXT) RNAeval$(EXEEXT) RNAheat$(EXEEXT) \
	RNApdist$(EXEEXT) RNAdistance$(EXEEXT) RNAinverse$(EXEEXT) \
	RNAplot$(EXEEXT) RNAsubopt$(EXEEXT) RNALfold$(EXEEXT) \
	RNAcofold$(EXEEXT) RNApaln$(EXEEXT) RNAduplex$(EXEEXT) \
	RNAalifold$(EXEEXT) RNAplfold$(EXEEXT) RNAup$(EXEEXT) \
	RNAaliduplex$(EXEEXT) RNALalifold$(EXEEXT) RNA2Dfold$(EXEEXT) \
	RNAparconv$(EXEEXT) RNAPKplex$(EXEEXT) RNAplex$(EXEEXT) \
	RNAsnoop$(EXEEXT)
subdir = Progs
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/package.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_RNA2Dfold_OBJECTS = RNA2Dfold_cmdl.$(OBJEXT) RNA2Dfold.$(OBJEXT)
RNA2Dfold_OBJECTS = $(am_RNA2Dfold_OBJECTS)
RNA2Dfold_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
RNA2Dfold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNALalifold_OBJECTS = RNALalifold_cmdl.$(OBJEXT) \
	RNALalifold.$(OBJEXT)
RNALalifold_OBJECTS = $(am_RNALalifold_OBJECTS)
RNALalifold_LDADD = $(LDADD)
RNALalifold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNALfold_OBJECTS = RNALfold_cmdl.$(OBJEXT) RNALfold.$(OBJEXT)
RNALfold_OBJECTS = $(am_RNALfold_OBJECTS)
RNALfold_LDADD = $(LDADD)
RNALfold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAPKplex_OBJECTS = RNAPKplex_cmdl.$(OBJEXT) RNAPKplex.$(OBJEXT)
RNAPKplex_OBJECTS = $(am_RNAPKplex_OBJECTS)
RNAPKplex_LDADD = $(LDADD)
RNAPKplex_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAaliduplex_OBJECTS = RNAaliduplex_cmdl.$(OBJEXT) \
	RNAaliduplex.$(OBJEXT)
RNAaliduplex_OBJECTS = $(am_RNAaliduplex_OBJECTS)
RNAaliduplex_LDADD = $(LDADD)
RNAaliduplex_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAalifold_OBJECTS = RNAalifold_cmdl.$(OBJEXT) RNAalifold.$(OBJEXT)
RNAalifold_OBJECTS = $(am_RNAalifold_OBJECTS)
RNAalifold_LDADD = $(LDADD)
RNAalifold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAcofold_OBJECTS = RNAcofold_cmdl.$(OBJEXT) RNAcofold.$(OBJEXT)
RNAcofold_OBJECTS = $(am_RNAcofold_OBJECTS)
RNAcofold_LDADD = $(LDADD)
RNAcofold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAdistance_OBJECTS = RNAdistance_cmdl.$(OBJEXT) \
	RNAdistance.$(OBJEXT)
RNAdistance_OBJECTS = $(am_RNAdistance_OBJECTS)
RNAdistance_LDADD = $(LDADD)
RNAdistance_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAduplex_OBJECTS = RNAduplex_cmdl.$(OBJEXT) RNAduplex.$(OBJEXT)
RNAduplex_OBJECTS = $(am_RNAduplex_OBJECTS)
RNAduplex_LDADD = $(LDADD)
RNAduplex_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAeval_OBJECTS = RNAeval_cmdl.$(OBJEXT) RNAeval.$(OBJEXT)
RNAeval_OBJECTS = $(am_RNAeval_OBJECTS)
RNAeval_LDADD = $(LDADD)
RNAeval_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAfold_OBJECTS = RNAfold_cmdl.$(OBJEXT) RNAfold.$(OBJEXT)
RNAfold_OBJECTS = $(am_RNAfold_OBJECTS)
RNAfold_LDADD = $(LDADD)
RNAfold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAheat_OBJECTS = RNAheat_cmdl.$(OBJEXT) RNAheat.$(OBJEXT)
RNAheat_OBJECTS = $(am_RNAheat_OBJECTS)
RNAheat_LDADD = $(LDADD)
RNAheat_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAinverse_OBJECTS = RNAinverse_cmdl.$(OBJEXT) RNAinverse.$(OBJEXT)
RNAinverse_OBJECTS = $(am_RNAinverse_OBJECTS)
RNAinverse_LDADD = $(LDADD)
RNAinverse_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNApaln_OBJECTS = RNApaln_cmdl.$(OBJEXT) RNApaln.$(OBJEXT)
RNApaln_OBJECTS = $(am_RNApaln_OBJECTS)
RNApaln_LDADD = $(LDADD)
RNApaln_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAparconv_OBJECTS = RNAparconv_cmdl.$(OBJEXT) RNAparconv.$(OBJEXT)
RNAparconv_OBJECTS = $(am_RNAparconv_OBJECTS)
RNAparconv_LDADD = $(LDADD)
RNAparconv_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNApdist_OBJECTS = RNApdist_cmdl.$(OBJEXT) RNApdist.$(OBJEXT)
RNApdist_OBJECTS = $(am_RNApdist_OBJECTS)
RNApdist_LDADD = $(LDADD)
RNApdist_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAplex_OBJECTS = RNAplex_cmdl.$(OBJEXT) RNAplex.$(OBJEXT)
RNAplex_OBJECTS = $(am_RNAplex_OBJECTS)
RNAplex_LDADD = $(LDADD)
RNAplex_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAplfold_OBJECTS = RNAplfold_cmdl.$(OBJEXT) RNAplfold.$(OBJEXT)
RNAplfold_OBJECTS = $(am_RNAplfold_OBJECTS)
RNAplfold_LDADD = $(LDADD)
RNAplfold_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAplot_OBJECTS = RNAplot_cmdl.$(OBJEXT) RNAplot.$(OBJEXT)
RNAplot_OBJECTS = $(am_RNAplot_OBJECTS)
RNAplot_LDADD = $(LDADD)
RNAplot_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAsnoop_OBJECTS = RNAsnoop_cmdl.$(OBJEXT) RNAsnoop.$(OBJEXT)
RNAsnoop_OBJECTS = $(am_RNAsnoop_OBJECTS)
RNAsnoop_LDADD = $(LDADD)
RNAsnoop_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAsubopt_OBJECTS = RNAsubopt_cmdl.$(OBJEXT) RNAsubopt.$(OBJEXT)
RNAsubopt_OBJECTS = $(am_RNAsubopt_OBJECTS)
RNAsubopt_LDADD = $(LDADD)
RNAsubopt_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
am_RNAup_OBJECTS = RNAup_cmdl.$(OBJEXT) RNAup.$(OBJEXT)
RNAup_OBJECTS = $(am_RNAup_OBJECTS)
RNAup_LDADD = $(LDADD)
RNAup_DEPENDENCIES = $(am__DEPENDENCIES_1) ../lib/libRNA.a
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(RNA2Dfold_SOURCES) $(RNALalifold_SOURCES) \
	$(RNALfold_SOURCES) $(RNAPKplex_SOURCES) \
	$(RNAaliduplex_SOURCES) $(RNAalifold_SOURCES) \
	$(RNAcofold_SOURCES) $(RNAdistance_SOURCES) \
	$(RNAduplex_SOURCES) $(RNAeval_SOURCES) $(RNAfold_SOURCES) \
	$(RNAheat_SOURCES) $(RNAinverse_SOURCES) $(RNApaln_SOURCES) \
	$(RNAparconv_SOURCES) $(RNApdist_SOURCES) $(RNAplex_SOURCES) \
	$(RNAplfold_SOURCES) $(RNAplot_SOURCES) $(RNAsnoop_SOURCES) \
	$(RNAsubopt_SOURCES) $(RNAup_SOURCES)
DIST_SOURCES = $(RNA2Dfold_SOURCES) $(RNALalifold_SOURCES) \
	$(RNALfold_SOURCES) $(RNAPKplex_SOURCES) \
	$(RNAaliduplex_SOURCES) $(RNAalifold_SOURCES) \
	$(RNAcofold_SOURCES) $(RNAdistance_SOURCES) \
	$(RNAduplex_SOURCES) $(RNAeval_SOURCES) $(RNAfold_SOURCES) \
	$(RNAheat_SOURCES) $(RNAinverse_SOURCES) $(RNApaln_SOURCES) \
	$(RNAparconv_SOURCES) $(RNApdist_SOURCES) $(RNAplex_SOURCES) \
	$(RNAplfold_SOURCES) $(RNAplot_SOURCES) $(RNAsnoop_SOURCES) \
	$(RNAsubopt_SOURCES) $(RNAup_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLUSTER_DIR = @CLUSTER_DIR@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOXYGEN_CMD_LATEX = @DOXYGEN_CMD_LATEX@
DOXYGEN_CMD_MAKEINDEX = @DOXYGEN_CMD_MAKEINDEX@
DOXYGEN_CONF = @DOXYGEN_CONF@
DOXYGEN_DOCDIR = @DOXYGEN_DOCDIR@
DOXYGEN_GENERATE_HTML = @DOXYGEN_GENERATE_HTML@
DOXYGEN_GENERATE_LATEX = @DOXYGEN_GENERATE_LATEX@
DOXYGEN_HAVE_DOT = @DOXYGEN_HAVE_DOT@
DOXYGEN_PROJECT_NAME = @DOXYGEN_PROJECT_NAME@
DOXYGEN_SRCDIR = @DOXYGEN_SRCDIR@
DOXYGEN_WITH_PDFLATEX = @DOXYGEN_WITH_PDFLATEX@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FPIC = @FPIC@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
ISODATE = @ISODATE@
LDFLAGS = @LDFLAGS@
LIBGOMPFLAG = @LIBGOMPFLAG@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSVM_DIR = @LIBSVM_DIR@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERLPREFIX = @PERLPREFIX@
PERL_INTERFACE = @PERL_INTERFACE@
POW_LIB = @POW_LIB@
PYTHON_INTERFACE = @PYTHON_INTERFACE@
PerlCmd = @PerlCmd@
PythonCmd = @PythonCmd@
RANLIB = @RANLIB@
REFERENCE_MANUAL_PDF_NAME = @REFERENCE_MANUAL_PDF_NAME@
REFERENCE_MANUAL_TAGFILE = @REFERENCE_MANUAL_TAGFILE@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dot = @dot@
doxygen = @doxygen@
dvidir = @dvidir@
egrep = @egrep@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
latex = @latex@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
makeindex = @makeindex@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pdflatex = @pdflatex@
perl = @perl@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
@WITH_LIBSVM_FALSE@RNALfold_LINK = ${CCLD} \
@WITH_LIBSVM_FALSE@                  $(AM_CFLAGS) $(CFLAGS) \
@WITH_LIBSVM_FALSE@                  $(AM_LDFLAGS) $(LDFLAGS) -o $@

@WITH_LIBSVM_TRUE@RNALfold_LINK = ${CXXLD} \
@WITH_LIBSVM_TRUE@                  $(AM_CXXFLAGS) $(CXXFLAGS) \
@WITH_LIBSVM_TRUE@                  $(AM_LDFLAGS) $(LDFLAGS) -o $@

LDADD = $(OPENMP_CFLAGS) ../lib/libRNA.a -lm
AM_CFLAGS = $(OPENMP_CFLAGS)
AM_CPPFLAGS = -I$(srcdir)/../H -I$(srcdir)/../lib
GENGETOPT_CMDL = RNAfold_cmdl.c RNAfold_cmdl.h\
              RNAalifold_cmdl.c RNAalifold_cmdl.h\
              RNAcofold_cmdl.c  RNAcofold_cmdl.h\
              RNAup_cmdl.c  RNAup_cmdl.h\
              RNALfold_cmdl.c RNALfold_cmdl.h\
              RNALalifold_cmdl.c RNALalifold_cmdl.h\
              RNAplfold_cmdl.c RNAplfold_cmdl.h\
              RNAduplex_cmdl.c RNAduplex_cmdl.h\
              RNAaliduplex_cmdl.c RNAaliduplex_cmdl.h\
              RNAeval_cmdl.c RNAeval_cmdl.h\
              RNAheat_cmdl.c RNAheat_cmdl.h\
              RNAsubopt_cmdl.c RNAsubopt_cmdl.h\
              RNA2Dfold_cmdl.c RNA2Dfold_cmdl.h\
              RNAparconv_cmdl.c RNAparconv_cmdl.h\
              RNAinverse_cmdl.c RNAinverse_cmdl.h\
              RNApaln_cmdl.c RNApaln_cmdl.h\
              RNAplot_cmdl.c RNAplot_cmdl.h\
              RNAPKplex_cmdl.c RNAPKplex_cmdl.h\
              RNAplex_cmdl.c RNAplex_cmdl.h\
              RNAsnoop_cmdl.c RNAsnoop_cmdl.h\
              RNAdistance_cmdl.c RNAdistance_cmdl.h\
              RNApdist_cmdl.c RNApdist_cmdl.h

GENGETOPT_FILES = RNAfold.ggo RNAalifold.ggo RNAcofold.ggo\
              RNAup.ggo RNALfold.ggo RNALalifold.ggo\
              RNAplfold.ggo RNAduplex.ggo RNAaliduplex.ggo\
              RNAeval.ggo RNAheat.ggo RNAsubopt.ggo RNA2Dfold.ggo\
              RNAparconv.ggo RNAinverse.ggo RNApaln.ggo RNAplot.ggo\
              RNAPKplex.ggo RNAplex.ggo RNAsnoop.ggo RNAdistance.ggo\
              RNApdist.ggo

EXTRA_DIST = ${GENGETOPT_FILES} ${GENGETOPT_CMDL}
RNAfold_SOURCES = RNAfold_cmdl.c RNAfold.c
RNAsubopt_SOURCES = RNAsubopt_cmdl.c RNAsubopt.c
RNAalifold_SOURCES = RNAalifold_cmdl.c RNAalifold.c
RNAcofold_SOURCES = RNAcofold_cmdl.c RNAcofold.c
RNAup_SOURCES = RNAup_cmdl.c RNAup.c
RNALfold_SOURCES = RNALfold_cmdl.c RNALfold.c
RNALalifold_SOURCES = RNALalifold_cmdl.c RNALalifold.c
RNAplfold_SOURCES = RNAplfold_cmdl.c RNAplfold.c
RNAduplex_SOURCES = RNAduplex_cmdl.c RNAduplex.c
RNAaliduplex_SOURCES = RNAaliduplex_cmdl.c RNAaliduplex.c
RNAeval_SOURCES = RNAeval_cmdl.c RNAeval.c
RNAheat_SOURCES = RNAheat_cmdl.c RNAheat.c
RNA2Dfold_SOURCES = RNA2Dfold_cmdl.c RNA2Dfold.c
RNAparconv_SOURCES = RNAparconv_cmdl.c RNAparconv.c
RNAinverse_SOURCES = RNAinverse_cmdl.c RNAinverse.c
RNApaln_SOURCES = RNApaln_cmdl.c RNApaln.c
RNAplot_SOURCES = RNAplot_cmdl.c RNAplot.c
RNAPKplex_SOURCES = RNAPKplex_cmdl.c RNAPKplex.c
RNAplex_SOURCES = RNAplex_cmdl.c RNAplex.c
RNAsnoop_SOURCES = RNAsnoop_cmdl.c RNAsnoop.c
RNAdistance_SOURCES = RNAdistance_cmdl.c RNAdistance.c
RNApdist_SOURCES = RNApdist_cmdl.c RNApdist.c
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Progs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Progs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

RNA2Dfold$(EXEEXT): $(RNA2Dfold_OBJECTS) $(RNA2Dfold_DEPENDENCIES) $(EXTRA_RNA2Dfold_DEPENDENCIES) 
	@rm -f RNA2Dfold$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNA2Dfold_OBJECTS) $(RNA2Dfold_LDADD) $(LIBS)

RNALalifold$(EXEEXT): $(RNALalifold_OBJECTS) $(RNALalifold_DEPENDENCIES) $(EXTRA_RNALalifold_DEPENDENCIES) 
	@rm -f RNALalifold$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNALalifold_OBJECTS) $(RNALalifold_LDADD) $(LIBS)

RNALfold$(EXEEXT): $(RNALfold_OBJECTS) $(RNALfold_DEPENDENCIES) $(EXTRA_RNALfold_DEPENDENCIES) 
	@rm -f RNALfold$(EXEEXT)
	$(AM_V_GEN)$(RNALfold_LINK) $(RNALfold_OBJECTS) $(RNALfold_LDADD) $(LIBS)

RNAPKplex$(EXEEXT): $(RNAPKplex_OBJECTS) $(RNAPKplex_DEPENDENCIES) $(EXTRA_RNAPKplex_DEPENDENCIES) 
	@rm -f RNAPKplex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAPKplex_OBJECTS) $(RNAPKplex_LDADD) $(LIBS)

RNAaliduplex$(EXEEXT): $(RNAaliduplex_OBJECTS) $(RNAaliduplex_DEPENDENCIES) $(EXTRA_RNAaliduplex_DEPENDENCIES) 
	@rm -f RNAaliduplex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAaliduplex_OBJECTS) $(RNAaliduplex_LDADD) $(LIBS)

RNAalifold$(EXEEXT): $(RNAalifold_OBJECTS) $(RNAalifold_DEPENDENCIES) $(EXTRA_RNAalifold_DEPENDENCIES) 
	@rm -f RNAalifold$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAalifold_OBJECTS) $(RNAalifold_LDADD) $(LIBS)

RNAcofold$(EXEEXT): $(RNAcofold_OBJECTS) $(RNAcofold_DEPENDENCIES) $(EXTRA_RNAcofold_DEPENDENCIES) 
	@rm -f RNAcofold$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAcofold_OBJECTS) $(RNAcofold_LDADD) $(LIBS)

RNAdistance$(EXEEXT): $(RNAdistance_OBJECTS) $(RNAdistance_DEPENDENCIES) $(EXTRA_RNAdistance_DEPENDENCIES) 
	@rm -f RNAdistance$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAdistance_OBJECTS) $(RNAdistance_LDADD) $(LIBS)

RNAduplex$(EXEEXT): $(RNAduplex_OBJECTS) $(RNAduplex_DEPENDENCIES) $(EXTRA_RNAduplex_DEPENDENCIES) 
	@rm -f RNAduplex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAduplex_OBJECTS) $(RNAduplex_LDADD) $(LIBS)

RNAeval$(EXEEXT): $(RNAeval_OBJECTS) $(RNAeval_DEPENDENCIES) $(EXTRA_RNAeval_DEPENDENCIES) 
	@rm -f RNAeval$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAeval_OBJECTS) $(RNAeval_LDADD) $(LIBS)

RNAfold$(EXEEXT): $(RNAfold_OBJECTS) $(RNAfold_DEPENDENCIES) $(EXTRA_RNAfold_DEPENDENCIES) 
	@rm -f RNAfold$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAfold_OBJECTS) $(RNAfold_LDADD) $(LIBS)

RNAheat$(EXEEXT): $(RNAheat_OBJECTS) $(RNAheat_DEPENDENCIES) $(EXTRA_RNAheat_DEPENDENCIES) 
	@rm -f RNAheat$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAheat_OBJECTS) $(RNAheat_LDADD) $(LIBS)

RNAinverse$(EXEEXT): $(RNAinverse_OBJECTS) $(RNAinverse_DEPENDENCIES) $(EXTRA_RNAinverse_DEPENDENCIES) 
	@rm -f RNAinverse$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAinverse_OBJECTS) $(RNAinverse_LDADD) $(LIBS)

RNApaln$(EXEEXT): $(RNApaln_OBJECTS) $(RNApaln_DEPENDENCIES) $(EXTRA_RNApaln_DEPENDENCIES) 
	@rm -f RNApaln$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNApaln_OBJECTS) $(RNApaln_LDADD) $(LIBS)

RNAparconv$(EXEEXT): $(RNAparconv_OBJECTS) $(RNAparconv_DEPENDENCIES) $(EXTRA_RNAparconv_DEPENDENCIES) 
	@rm -f RNAparconv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAparconv_OBJECTS) $(RNAparconv_LDADD) $(LIBS)

RNApdist$(EXEEXT): $(RNApdist_OBJECTS) $(RNApdist_DEPENDENCIES) $(EXTRA_RNApdist_DEPENDENCIES) 
	@rm -f RNApdist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNApdist_OBJECTS) $(RNApdist_LDADD) $(LIBS)

RNAplex$(EXEEXT): $(RNAplex_OBJECTS) $(RNAplex_DEPENDENCIES) $(EXTRA_RNAplex_DEPENDENCIES) 
	@rm -f RNAplex$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAplex_OBJECTS) $(RNAplex_LDADD) $(LIBS)

RNAplfold$(EXEEXT): $(RNAplfold_OBJECTS) $(RNAplfold_DEPENDENCIES) $(EXTRA_RNAplfold_DEPENDENCIES) 
	@rm -f RNAplfold$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAplfold_OBJECTS) $(RNAplfold_LDADD) $(LIBS)

RNAplot$(EXEEXT): $(RNAplot_OBJECTS) $(RNAplot_DEPENDENCIES) $(EXTRA_RNAplot_DEPENDENCIES) 
	@rm -f RNAplot$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAplot_OBJECTS) $(RNAplot_LDADD) $(LIBS)

RNAsnoop$(EXEEXT): $(RNAsnoop_OBJECTS) $(RNAsnoop_DEPENDENCIES) $(EXTRA_RNAsnoop_DEPENDENCIES) 
	@rm -f RNAsnoop$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAsnoop_OBJECTS) $(RNAsnoop_LDADD) $(LIBS)

RNAsubopt$(EXEEXT): $(RNAsubopt_OBJECTS) $(RNAsubopt_DEPENDENCIES) $(EXTRA_RNAsubopt_DEPENDENCIES) 
	@rm -f RNAsubopt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAsubopt_OBJECTS) $(RNAsubopt_LDADD) $(LIBS)

RNAup$(EXEEXT): $(RNAup_OBJECTS) $(RNAup_DEPENDENCIES) $(EXTRA_RNAup_DEPENDENCIES) 
	@rm -f RNAup$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(RNAup_OBJECTS) $(RNAup_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNA2Dfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNA2Dfold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNALalifold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNALalifold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNALfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNALfold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAPKplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAPKplex_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAaliduplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAaliduplex_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAalifold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAalifold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAcofold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAcofold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAdistance.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAdistance_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAduplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAduplex_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAeval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAeval_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAfold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAheat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAheat_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAinverse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAinverse_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNApaln.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNApaln_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAparconv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAparconv_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNApdist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNApdist_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAplex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAplex_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAplfold.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAplfold_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAplot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAplot_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAsnoop.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAsnoop_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAsubopt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAsubopt_cmdl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/RNAup_cmdl.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS


# remove all generated man pages
maintainer-clean-local:
	rm -rf $(GENGETOPT_CMDL)

RNAfold.c:    RNAfold_cmdl.h

RNAfold_cmdl.h  RNAfold_cmdl.c: RNAfold.ggo
	gengetopt -i RNAfold.ggo

RNAsubopt.c:    RNAsubopt_cmdl.h

RNAsubopt_cmdl.h  RNAsubopt_cmdl.c: RNAsubopt.ggo
	gengetopt -i RNAsubopt.ggo

RNAalifold.c:    RNAalifold_cmdl.h

RNAalifold_cmdl.h  RNAalifold_cmdl.c: RNAalifold.ggo
	gengetopt -i RNAalifold.ggo

RNAcofold.c:    RNAcofold_cmdl.h

RNAcofold_cmdl.h  RNAcofold_cmdl.c: RNAcofold.ggo
	gengetopt -i RNAcofold.ggo

RNAup.c:        RNAup_cmdl.h

RNAup_cmdl.h  RNAup_cmdl.c: RNAup.ggo
	gengetopt -i RNAup.ggo

RNALfold.c:       RNALfold_cmdl.h

RNALfold_cmdl.h  RNALfold_cmdl.c: RNALfold.ggo
	gengetopt -i RNALfold.ggo

RNALalifold.c:      RNALalifold_cmdl.h

RNALalifold_cmdl.h  RNALalifold_cmdl.c: RNALalifold.ggo
	gengetopt -i RNALalifold.ggo

RNAplfold.c:      RNAplfold_cmdl.h

RNAplfold_cmdl.h  RNAplfold_cmdl.c: RNAplfold.ggo
	gengetopt -i RNAplfold.ggo

RNAduplex.c:      RNAduplex_cmdl.h

RNAduplex_cmdl.h  RNAduplex_cmdl.c: RNAduplex.ggo
	gengetopt -i RNAduplex.ggo

RNAaliduplex.c:   RNAaliduplex_cmdl.h

RNAaliduplex_cmdl.h  RNAaliduplex_cmdl.c: RNAaliduplex.ggo
	gengetopt -i RNAaliduplex.ggo

RNAeval.c:   RNAeval_cmdl.h

RNAeval_cmdl.h  RNAeval_cmdl.c: RNAeval.ggo
	gengetopt -i RNAeval.ggo

RNAheat.c:   RNAheat_cmdl.h

RNAheat_cmdl.h  RNAheat_cmdl.c: RNAheat.ggo
	gengetopt -i RNAheat.ggo

RNA2Dfold.c:    RNA2Dfold_cmdl.h

RNA2Dfold_cmdl.h  RNA2Dfold_cmdl.c: RNA2Dfold.ggo
	gengetopt -i RNA2Dfold.ggo

RNAparconv.c:    RNAparconv_cmdl.h

RNAparconv_cmdl.h  RNAparconv_cmdl.c: RNAparconv.ggo
	gengetopt -i RNAparconv.ggo

RNAinverse.c:   RNAinverse_cmdl.h

RNAinverse_cmdl.h  RNAinverse_cmdl.c: RNAinverse.ggo
	gengetopt -i RNAinverse.ggo

RNApaln.c:   RNApaln_cmdl.h

RNApaln_cmdl.h  RNApaln_cmdl.c: RNApaln.ggo
	gengetopt -i RNApaln.ggo

RNAplot.c:   RNAplot_cmdl.h

RNAplot_cmdl.h  RNAplot_cmdl.c: RNAplot.ggo
	gengetopt -i RNAplot.ggo

RNAPKplex.c:    RNAPKplex_cmdl.h

RNAPKplex_cmdl.h  RNAPKplex_cmdl.c: RNAPKplex.ggo
	gengetopt -i RNAPKplex.ggo

RNAplex.c:    RNAplex_cmdl.h

RNAplex_cmdl.h  RNAplex_cmdl.c: RNAplex.ggo
	gengetopt -i RNAplex.ggo

RNAsnoop.c:    RNAsnoop_cmdl.h

RNAsnoop_cmdl.h  RNAsnoop_cmdl.c: RNAsnoop.ggo
	gengetopt -i RNAsnoop.ggo

RNAdistance.c:    RNAdistance_cmdl.h

RNAdistance_cmdl.h  RNAdistance_cmdl.c: RNAdistance.ggo
	gengetopt -i RNAdistance.ggo

RNApdist.c:    RNApdist_cmdl.h

RNApdist_cmdl.h  RNApdist_cmdl.c: RNApdist.ggo
	gengetopt -i RNApdist.ggo

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
